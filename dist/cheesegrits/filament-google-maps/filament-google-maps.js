var __create=Object.create,__defProp=Object.defineProperty,__getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty,__getOwnPropNames=Object.getOwnPropertyNames,__getOwnPropDesc=Object.getOwnPropertyDescriptor;var __markAsModule=target=>__defProp(target,"__esModule",{value:!0});var __commonJS=(callback,module)=>()=>(module||(module={exports:{}},callback(module.exports,module)),module.exports);var __exportStar=(target,module,desc)=>{if(module&&typeof module=="object"||typeof module=="function")for(let key of __getOwnPropNames(module))!__hasOwnProp.call(target,key)&&key!=="default"&&__defProp(target,key,{get:()=>module[key],enumerable:!(desc=__getOwnPropDesc(module,key))||desc.enumerable});return target},__toModule=module=>__exportStar(__markAsModule(__defProp(module!=null?__create(__getProtoOf(module)):{},"default",module&&module.__esModule&&"default"in module?{get:()=>module.default,enumerable:!0}:{value:module,enumerable:!0})),module);var require_fast_deep_equal=__commonJS((exports,module)=>{"use strict";module.exports=function equal2(a,b){if(a===b)return!0;if(a&&b&&typeof a=="object"&&typeof b=="object"){if(a.constructor!==b.constructor)return!1;var length,i,keys;if(Array.isArray(a)){if(length=a.length,length!=b.length)return!1;for(i=length;i--!=0;)if(!equal2(a[i],b[i]))return!1;return!0}if(a.constructor===RegExp)return a.source===b.source&&a.flags===b.flags;if(a.valueOf!==Object.prototype.valueOf)return a.valueOf()===b.valueOf();if(a.toString!==Object.prototype.toString)return a.toString()===b.toString();if(keys=Object.keys(a),length=keys.length,length!==Object.keys(b).length)return!1;for(i=length;i--!=0;)if(!Object.prototype.hasOwnProperty.call(b,keys[i]))return!1;for(i=length;i--!=0;){var key=keys[i];if(!equal2(a[key],b[key]))return!1}return!0}return a!==a&&b!==b}});var import_fast_deep_equal=__toModule(require_fast_deep_equal());function sortKD(ids,coords,nodeSize,left,right,depth){if(right-left<=nodeSize)return;let m=left+right>>1;select(ids,coords,m,left,right,depth%2),sortKD(ids,coords,nodeSize,left,m-1,depth+1),sortKD(ids,coords,nodeSize,m+1,right,depth+1)}function select(ids,coords,k,left,right,inc){for(;right>left;){if(right-left>600){let n=right-left+1,m=k-left+1,z=Math.log(n),s=.5*Math.exp(2*z/3),sd=.5*Math.sqrt(z*s*(n-s)/n)*(m-n/2<0?-1:1),newLeft=Math.max(left,Math.floor(k-m*s/n+sd)),newRight=Math.min(right,Math.floor(k+(n-m)*s/n+sd));select(ids,coords,k,newLeft,newRight,inc)}let t=coords[2*k+inc],i=left,j=right;for(swapItem(ids,coords,left,k),coords[2*right+inc]>t&&swapItem(ids,coords,left,right);i<j;){for(swapItem(ids,coords,i,j),i++,j--;coords[2*i+inc]<t;)i++;for(;coords[2*j+inc]>t;)j--}coords[2*left+inc]===t?swapItem(ids,coords,left,j):(j++,swapItem(ids,coords,j,right)),j<=k&&(left=j+1),k<=j&&(right=j-1)}}function swapItem(ids,coords,i,j){swap(ids,i,j),swap(coords,2*i,2*j),swap(coords,2*i+1,2*j+1)}function swap(arr,i,j){let tmp=arr[i];arr[i]=arr[j],arr[j]=tmp}function range(ids,coords,minX,minY,maxX,maxY,nodeSize){let stack=[0,ids.length-1,0],result=[],x,y;for(;stack.length;){let axis=stack.pop(),right=stack.pop(),left=stack.pop();if(right-left<=nodeSize){for(let i=left;i<=right;i++)x=coords[2*i],y=coords[2*i+1],x>=minX&&x<=maxX&&y>=minY&&y<=maxY&&result.push(ids[i]);continue}let m=Math.floor((left+right)/2);x=coords[2*m],y=coords[2*m+1],x>=minX&&x<=maxX&&y>=minY&&y<=maxY&&result.push(ids[m]);let nextAxis=(axis+1)%2;(axis===0?minX<=x:minY<=y)&&(stack.push(left),stack.push(m-1),stack.push(nextAxis)),(axis===0?maxX>=x:maxY>=y)&&(stack.push(m+1),stack.push(right),stack.push(nextAxis))}return result}function within(ids,coords,qx,qy,r,nodeSize){let stack=[0,ids.length-1,0],result=[],r2=r*r;for(;stack.length;){let axis=stack.pop(),right=stack.pop(),left=stack.pop();if(right-left<=nodeSize){for(let i=left;i<=right;i++)sqDist(coords[2*i],coords[2*i+1],qx,qy)<=r2&&result.push(ids[i]);continue}let m=Math.floor((left+right)/2),x=coords[2*m],y=coords[2*m+1];sqDist(x,y,qx,qy)<=r2&&result.push(ids[m]);let nextAxis=(axis+1)%2;(axis===0?qx-r<=x:qy-r<=y)&&(stack.push(left),stack.push(m-1),stack.push(nextAxis)),(axis===0?qx+r>=x:qy+r>=y)&&(stack.push(m+1),stack.push(right),stack.push(nextAxis))}return result}function sqDist(ax,ay,bx,by){let dx=ax-bx,dy=ay-by;return dx*dx+dy*dy}var defaultGetX=p=>p[0],defaultGetY=p=>p[1],KDBush=class{constructor(points,getX2=defaultGetX,getY2=defaultGetY,nodeSize=64,ArrayType=Float64Array){this.nodeSize=nodeSize,this.points=points;let IndexArrayType=points.length<65536?Uint16Array:Uint32Array,ids=this.ids=new IndexArrayType(points.length),coords=this.coords=new ArrayType(points.length*2);for(let i=0;i<points.length;i++)ids[i]=i,coords[2*i]=getX2(points[i]),coords[2*i+1]=getY2(points[i]);sortKD(ids,coords,nodeSize,0,ids.length-1,0)}range(minX,minY,maxX,maxY){return range(this.ids,this.coords,minX,minY,maxX,maxY,this.nodeSize)}within(x,y,r){return within(this.ids,this.coords,x,y,r,this.nodeSize)}},src_default=KDBush;var defaultOptions={minZoom:0,maxZoom:16,minPoints:2,radius:40,extent:512,nodeSize:64,log:!1,generateId:!1,reduce:null,map:props=>props},fround=Math.fround||(tmp=>x=>(tmp[0]=+x,tmp[0]))(new Float32Array(1)),Supercluster=class{constructor(options){this.options=extend(Object.create(defaultOptions),options),this.trees=new Array(this.options.maxZoom+1)}load(points){let{log,minZoom,maxZoom,nodeSize}=this.options;log&&console.time("total time");let timerId=`prepare ${points.length} points`;log&&console.time(timerId),this.points=points;let clusters=[];for(let i=0;i<points.length;i++)!points[i].geometry||clusters.push(createPointCluster(points[i],i));this.trees[maxZoom+1]=new src_default(clusters,getX,getY,nodeSize,Float32Array),log&&console.timeEnd(timerId);for(let z=maxZoom;z>=minZoom;z--){let now=+Date.now();clusters=this._cluster(clusters,z),this.trees[z]=new src_default(clusters,getX,getY,nodeSize,Float32Array),log&&console.log("z%d: %d clusters in %dms",z,clusters.length,+Date.now()-now)}return log&&console.timeEnd("total time"),this}getClusters(bbox,zoom){let minLng=((bbox[0]+180)%360+360)%360-180,minLat=Math.max(-90,Math.min(90,bbox[1])),maxLng=bbox[2]===180?180:((bbox[2]+180)%360+360)%360-180,maxLat=Math.max(-90,Math.min(90,bbox[3]));if(bbox[2]-bbox[0]>=360)minLng=-180,maxLng=180;else if(minLng>maxLng){let easternHem=this.getClusters([minLng,minLat,180,maxLat],zoom),westernHem=this.getClusters([-180,minLat,maxLng,maxLat],zoom);return easternHem.concat(westernHem)}let tree=this.trees[this._limitZoom(zoom)],ids=tree.range(lngX(minLng),latY(maxLat),lngX(maxLng),latY(minLat)),clusters=[];for(let id of ids){let c=tree.points[id];clusters.push(c.numPoints?getClusterJSON(c):this.points[c.index])}return clusters}getChildren(clusterId){let originId=this._getOriginId(clusterId),originZoom=this._getOriginZoom(clusterId),errorMsg="No cluster with the specified id.",index=this.trees[originZoom];if(!index)throw new Error(errorMsg);let origin=index.points[originId];if(!origin)throw new Error(errorMsg);let r=this.options.radius/(this.options.extent*Math.pow(2,originZoom-1)),ids=index.within(origin.x,origin.y,r),children=[];for(let id of ids){let c=index.points[id];c.parentId===clusterId&&children.push(c.numPoints?getClusterJSON(c):this.points[c.index])}if(children.length===0)throw new Error(errorMsg);return children}getLeaves(clusterId,limit,offset){limit=limit||10,offset=offset||0;let leaves=[];return this._appendLeaves(leaves,clusterId,limit,offset,0),leaves}getTile(z,x,y){let tree=this.trees[this._limitZoom(z)],z2=Math.pow(2,z),{extent,radius}=this.options,p=radius/extent,top=(y-p)/z2,bottom=(y+1+p)/z2,tile={features:[]};return this._addTileFeatures(tree.range((x-p)/z2,top,(x+1+p)/z2,bottom),tree.points,x,y,z2,tile),x===0&&this._addTileFeatures(tree.range(1-p/z2,top,1,bottom),tree.points,z2,y,z2,tile),x===z2-1&&this._addTileFeatures(tree.range(0,top,p/z2,bottom),tree.points,-1,y,z2,tile),tile.features.length?tile:null}getClusterExpansionZoom(clusterId){let expansionZoom=this._getOriginZoom(clusterId)-1;for(;expansionZoom<=this.options.maxZoom;){let children=this.getChildren(clusterId);if(expansionZoom++,children.length!==1)break;clusterId=children[0].properties.cluster_id}return expansionZoom}_appendLeaves(result,clusterId,limit,offset,skipped){let children=this.getChildren(clusterId);for(let child of children){let props=child.properties;if(props&&props.cluster?skipped+props.point_count<=offset?skipped+=props.point_count:skipped=this._appendLeaves(result,props.cluster_id,limit,offset,skipped):skipped<offset?skipped++:result.push(child),result.length===limit)break}return skipped}_addTileFeatures(ids,points,x,y,z2,tile){for(let i of ids){let c=points[i],isCluster=c.numPoints,tags,px,py;if(isCluster)tags=getClusterProperties(c),px=c.x,py=c.y;else{let p=this.points[c.index];tags=p.properties,px=lngX(p.geometry.coordinates[0]),py=latY(p.geometry.coordinates[1])}let f={type:1,geometry:[[Math.round(this.options.extent*(px*z2-x)),Math.round(this.options.extent*(py*z2-y))]],tags},id;isCluster?id=c.id:this.options.generateId?id=c.index:this.points[c.index].id&&(id=this.points[c.index].id),id!==void 0&&(f.id=id),tile.features.push(f)}}_limitZoom(z){return Math.max(this.options.minZoom,Math.min(Math.floor(+z),this.options.maxZoom+1))}_cluster(points,zoom){let clusters=[],{radius,extent,reduce,minPoints}=this.options,r=radius/(extent*Math.pow(2,zoom));for(let i=0;i<points.length;i++){let p=points[i];if(p.zoom<=zoom)continue;p.zoom=zoom;let tree=this.trees[zoom+1],neighborIds=tree.within(p.x,p.y,r),numPointsOrigin=p.numPoints||1,numPoints=numPointsOrigin;for(let neighborId of neighborIds){let b=tree.points[neighborId];b.zoom>zoom&&(numPoints+=b.numPoints||1)}if(numPoints>numPointsOrigin&&numPoints>=minPoints){let wx=p.x*numPointsOrigin,wy=p.y*numPointsOrigin,clusterProperties=reduce&&numPointsOrigin>1?this._map(p,!0):null,id=(i<<5)+(zoom+1)+this.points.length;for(let neighborId of neighborIds){let b=tree.points[neighborId];if(b.zoom<=zoom)continue;b.zoom=zoom;let numPoints2=b.numPoints||1;wx+=b.x*numPoints2,wy+=b.y*numPoints2,b.parentId=id,reduce&&(clusterProperties||(clusterProperties=this._map(p,!0)),reduce(clusterProperties,this._map(b)))}p.parentId=id,clusters.push(createCluster(wx/numPoints,wy/numPoints,id,numPoints,clusterProperties))}else if(clusters.push(p),numPoints>1)for(let neighborId of neighborIds){let b=tree.points[neighborId];b.zoom<=zoom||(b.zoom=zoom,clusters.push(b))}}return clusters}_getOriginId(clusterId){return clusterId-this.points.length>>5}_getOriginZoom(clusterId){return(clusterId-this.points.length)%32}_map(point,clone){if(point.numPoints)return clone?extend({},point.properties):point.properties;let original=this.points[point.index].properties,result=this.options.map(original);return clone&&result===original?extend({},result):result}},supercluster_default=Supercluster;function createCluster(x,y,id,numPoints,properties){return{x:fround(x),y:fround(y),zoom:Infinity,id,parentId:-1,numPoints,properties}}function createPointCluster(p,id){let[x,y]=p.geometry.coordinates;return{x:fround(lngX(x)),y:fround(latY(y)),zoom:Infinity,index:id,parentId:-1}}function getClusterJSON(cluster){return{type:"Feature",id:cluster.id,properties:getClusterProperties(cluster),geometry:{type:"Point",coordinates:[xLng(cluster.x),yLat(cluster.y)]}}}function getClusterProperties(cluster){let count=cluster.numPoints,abbrev=count>=1e4?`${Math.round(count/1e3)}k`:count>=1e3?`${Math.round(count/100)/10}k`:count;return extend(extend({},cluster.properties),{cluster:!0,cluster_id:cluster.id,point_count:count,point_count_abbreviated:abbrev})}function lngX(lng){return lng/360+.5}function latY(lat){let sin=Math.sin(lat*Math.PI/180),y=.5-.25*Math.log((1+sin)/(1-sin))/Math.PI;return y<0?0:y>1?1:y}function xLng(x){return(x-.5)*360}function yLat(y){let y2=(180-y*360)*Math.PI/180;return 360*Math.atan(Math.exp(y2))/Math.PI-90}function extend(dest,src){for(let id in src)dest[id]=src[id];return dest}function getX(p){return p.x}function getY(p){return p.y}function __rest(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(s!=null&&typeof Object.getOwnPropertySymbols=="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]]);return t}var Cluster=class{constructor({markers,position}){this.markers=markers,position&&(position instanceof google.maps.LatLng?this._position=position:this._position=new google.maps.LatLng(position))}get bounds(){if(!(this.markers.length===0&&!this._position))return this.markers.reduce((bounds,marker)=>bounds.extend(marker.getPosition()),new google.maps.LatLngBounds(this._position,this._position))}get position(){return this._position||this.bounds.getCenter()}get count(){return this.markers.filter(m=>m.getVisible()).length}push(marker){this.markers.push(marker)}delete(){this.marker&&(this.marker.setMap(null),delete this.marker),this.markers.length=0}};var AbstractAlgorithm=class{constructor({maxZoom=16}){this.maxZoom=maxZoom}noop({markers}){return noop(markers)}};var noop=markers=>markers.map(marker=>new Cluster({position:marker.getPosition(),markers:[marker]}));var SuperClusterAlgorithm=class extends AbstractAlgorithm{constructor(_a){var{maxZoom,radius=60}=_a,options=__rest(_a,["maxZoom","radius"]);super({maxZoom});this.superCluster=new supercluster_default(Object.assign({maxZoom:this.maxZoom,radius},options)),this.state={zoom:null}}calculate(input){let changed=!1;if(!(0,import_fast_deep_equal.default)(input.markers,this.markers)){changed=!0,this.markers=[...input.markers];let points=this.markers.map(marker=>({type:"Feature",geometry:{type:"Point",coordinates:[marker.getPosition().lng(),marker.getPosition().lat()]},properties:{marker}}));this.superCluster.load(points)}let state={zoom:input.map.getZoom()};return changed||this.state.zoom>this.maxZoom&&state.zoom>this.maxZoom||(changed=changed||!(0,import_fast_deep_equal.default)(this.state,state)),this.state=state,changed&&(this.clusters=this.cluster(input)),{clusters:this.clusters,changed}}cluster({map}){return this.superCluster.getClusters([-180,-90,180,90],Math.round(map.getZoom())).map(this.transformCluster.bind(this))}transformCluster({geometry:{coordinates:[lng,lat]},properties}){if(properties.cluster)return new Cluster({markers:this.superCluster.getLeaves(properties.cluster_id,Infinity).map(leaf=>leaf.properties.marker),position:new google.maps.LatLng({lat,lng})});{let marker=properties.marker;return new Cluster({markers:[marker],position:marker.getPosition()})}}},ClusterStats=class{constructor(markers,clusters){this.markers={sum:markers.length};let clusterMarkerCounts=clusters.map(a=>a.count),clusterMarkerSum=clusterMarkerCounts.reduce((a,b)=>a+b,0);this.clusters={count:clusters.length,markers:{mean:clusterMarkerSum/clusters.length,sum:clusterMarkerSum,min:Math.min(...clusterMarkerCounts),max:Math.max(...clusterMarkerCounts)}}}},DefaultRenderer=class{render({count,position},stats){let color=count>Math.max(10,stats.clusters.markers.mean)?"#ff0000":"#0000ff",svg=window.btoa(`
  <svg fill="${color}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 240 240">
    <circle cx="120" cy="120" opacity=".6" r="70" />
    <circle cx="120" cy="120" opacity=".3" r="90" />
    <circle cx="120" cy="120" opacity=".2" r="110" />
  </svg>`);return new google.maps.Marker({position,icon:{url:`data:image/svg+xml;base64,${svg}`,scaledSize:new google.maps.Size(45,45)},label:{text:String(count),color:"rgba(255,255,255,0.9)",fontSize:"12px"},title:`Cluster of ${count} markers`,zIndex:Number(google.maps.Marker.MAX_ZINDEX)+count})}};function extend2(type1,type2){for(let property in type2.prototype)type1.prototype[property]=type2.prototype[property]}var OverlayViewSafe=class{constructor(){extend2(OverlayViewSafe,google.maps.OverlayView)}},MarkerClustererEvents;(function(MarkerClustererEvents2){MarkerClustererEvents2.CLUSTERING_BEGIN="clusteringbegin",MarkerClustererEvents2.CLUSTERING_END="clusteringend",MarkerClustererEvents2.CLUSTER_CLICK="click"})(MarkerClustererEvents||(MarkerClustererEvents={}));var defaultOnClusterClickHandler=(_,cluster,map)=>{map.fitBounds(cluster.bounds)},MarkerClusterer=class extends OverlayViewSafe{constructor({map,markers=[],algorithm=new SuperClusterAlgorithm({}),renderer=new DefaultRenderer,onClusterClick=defaultOnClusterClickHandler}){super();this.markers=[...markers],this.clusters=[],this.algorithm=algorithm,this.renderer=renderer,this.onClusterClick=onClusterClick,map&&this.setMap(map)}addMarker(marker,noDraw){this.markers.includes(marker)||(this.markers.push(marker),noDraw||this.render())}addMarkers(markers,noDraw){markers.forEach(marker=>{this.addMarker(marker,!0)}),noDraw||this.render()}removeMarker(marker,noDraw){let index=this.markers.indexOf(marker);return index===-1?!1:(marker.setMap(null),this.markers.splice(index,1),noDraw||this.render(),!0)}removeMarkers(markers,noDraw){let removed=!1;return markers.forEach(marker=>{removed=this.removeMarker(marker,!0)||removed}),removed&&!noDraw&&this.render(),removed}clearMarkers(noDraw){this.markers.length=0,noDraw||this.render()}render(){let map=this.getMap();if(map instanceof google.maps.Map&&this.getProjection()){google.maps.event.trigger(this,MarkerClustererEvents.CLUSTERING_BEGIN,this);let{clusters,changed}=this.algorithm.calculate({markers:this.markers,map,mapCanvasProjection:this.getProjection()});(changed||changed==null)&&(this.reset(),this.clusters=clusters,this.renderClusters()),google.maps.event.trigger(this,MarkerClustererEvents.CLUSTERING_END,this)}}onAdd(){this.idleListener=this.getMap().addListener("idle",this.render.bind(this)),this.render()}onRemove(){google.maps.event.removeListener(this.idleListener),this.reset()}reset(){this.markers.forEach(marker=>marker.setMap(null)),this.clusters.forEach(cluster=>cluster.delete()),this.clusters=[]}renderClusters(){let stats=new ClusterStats(this.markers,this.clusters),map=this.getMap();this.clusters.forEach(cluster=>{cluster.markers.length===1?cluster.marker=cluster.markers[0]:(cluster.marker=this.renderer.render(cluster,stats),this.onClusterClick&&cluster.marker.addListener("click",event=>{google.maps.event.trigger(this,MarkerClustererEvents.CLUSTER_CLICK,cluster),this.onClusterClick(event,cluster,map)})),cluster.marker.setMap(map)})}};function filamentGoogleMapsField({state,setStateUsing,getStateUsing,autocomplete,autocompleteReverse,geolocate=!1,geolocateOnLoad,geolocateLabel,draggable,clickable,defaultLocation,statePath,markers=[],enableClustering=!1,markerAction=null,drawRoutes=!1,controls,layers,reverseGeocodeFields,defaultZoom,types,countries,placeField,debug,gmaps,mapEl,pacEl,drawingControl,drawingControlPosition,polyOptions={fillColor:"#f06eaa",strokeColor:"#00ff00",strokeOpacity:"0.5",strokeWeight:3,fillOpacity:.45,draggable:!0,editable:!1,clickable:!0},circleOptions={fillColor:"#f06eaa",strokeColor:"#00ff00",strokeOpacity:"0.5",strokeWeight:3,fillOpacity:.45,draggable:!0,editable:!1,clickable:!0},rectangleOptions={fillColor:"#f06eaa",strokeColor:"#00ff00",strokeOpacity:"0.5",strokeWeight:3,fillOpacity:.45,draggable:!0,editable:!1,clickable:!0},drawingModes={marker:!0,circle:!0,rectangle:!0,polygon:!0,polyline:!0},drawingField,geoJson,geoJsonField,geoJsonProperty,geoJsonVisible,reverseGeocodeUsing,placeUpdatedUsing,hasReverseGeocodeUsing=!1,hasPlaceUpdatedUsing=!1,mapType="roadmap"}){return{state,map:null,geocoder:null,marker:null,markers:[],clusterer:null,modelIds:[],markerLocation:null,layers:null,directionsService:null,directionsRenderer:null,routes:[],drawRoutesEnabled:!1,symbols:{"%n":["street_number"],"%z":["postal_code"],"%S":["street_address","route"],"%A1":["administrative_area_level_1"],"%A2":["administrative_area_level_2"],"%A3":["administrative_area_level_3"],"%A4":["administrative_area_level_4"],"%A5":["administrative_area_level_5"],"%a1":["administrative_area_level_1"],"%a2":["administrative_area_level_2"],"%a3":["administrative_area_level_3"],"%a4":["administrative_area_level_4"],"%a5":["administrative_area_level_5"],"%L":["locality","postal_town"],"%D":["sublocality"],"%C":["country"],"%c":["country"],"%p":["premise"],"%P":["premise"],"%sp":["subpremise","route"],"%SP":["subpremise","route"]},drawingManager:null,overlays:[],dataLayer:null,geoJsonDataLayer:null,polyOptions,circleOptions,rectangleOptions,selectedShape:null,placesService:null,placeFields:[],loadGMaps:function(){if(document.getElementById("filament-google-maps-google-maps-js")){let waitForGlobal=function(key,callback){window[key]?callback():setTimeout(function(){waitForGlobal(key,callback)},100)};waitForGlobal("filamentGoogleMapsAPILoaded",function(){this.createMap()}.bind(this))}else{let script=document.createElement("script");script.id="filament-google-maps-google-maps-js",window.filamentGoogleMapsAsyncLoad=this.createMap.bind(this),script.src=gmaps+"&callback=filamentGoogleMapsAsyncLoad",document.head.appendChild(script)}},init:function(){this.loadGMaps()},createMap:function(){if(window.filamentGoogleMapsAPILoaded=!0,(autocompleteReverse||Object.keys(reverseGeocodeFields).length>0)&&(this.geocoder=new google.maps.Geocoder),this.map=new google.maps.Map(mapEl,{center:this.getCoordinates(),zoom:defaultZoom,mapTypeId:google.maps.MapTypeId[mapType.toUpperCase()],...controls}),this.marker=new google.maps.Marker({draggable,map:this.map}),this.directionsService=new google.maps.DirectionsService,this.directionsRenderer=new google.maps.DirectionsRenderer({suppressMarkers:!0,preserveViewport:!0}),this.directionsRenderer.setMap(this.map),this.createMarkers(),this.createClustering(),this.drawRoutes(),this.marker.setPosition(this.getCoordinates()),clickable&&this.map.addListener("click",event=>{this.markerMoved(event)}),draggable&&google.maps.event.addListener(this.marker,"dragend",event=>{this.markerMoved(event)}),controls.searchBoxControl){let input=pacEl,searchBox=new google.maps.places.SearchBox(input);this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(input),searchBox.addListener("places_changed",()=>{input.value="",this.markerLocation=searchBox.getPlaces()[0].geometry.location})}if(drawRoutes&&this.addDrawRoutesButton(),hasPlaceUpdatedUsing&&(this.placesService=new google.maps.places.PlacesService(this.map)),this.placeFields=["address_components","formatted_address","geometry","name"],this.placeFields.includes(placeField)||this.placeFields.push(placeField),hasPlaceUpdatedUsing&&this.placeFields.push("photos"),autocomplete){let geoComplete=document.getElementById(autocomplete);if(geoComplete){window.addEventListener("keydown",function(e){if((e.key==="U+000A"||e.key==="Enter"||e.code==="Enter")&&e.target.nodeName==="INPUT"&&e.target.type==="text")return e.preventDefault(),!1},!0);let geocompleteOptions={fields:this.placeFields,strictBounds:!1,types},gAutocomplete=new google.maps.places.Autocomplete(geoComplete,geocompleteOptions);gAutocomplete.setComponentRestrictions({country:countries}),gAutocomplete.addListener("place_changed",()=>{let place=gAutocomplete.getPlace();if(!place.geometry||!place.geometry.location){window.alert("No details available for input: '"+place.name+"'");return}place.geometry.viewport?this.map.fitBounds(place.geometry.viewport):this.map.setCenter(place.geometry.location),setStateUsing(autocomplete,place[placeField]),this.marker.setPosition(place.geometry.location),this.markerLocation=place.geometry.location,this.setCoordinates(place.geometry.location),this.updateGeocodeFromAddressComponents(place.address_components),hasPlaceUpdatedUsing&&placeUpdatedUsing(place)})}}if(layers&&(this.layers=layers.map(layerUrl=>{new google.maps.KmlLayer({url:layerUrl,map:this.map}).addListener("click",kmlEvent=>{let text=kmlEvent.featureData.description})})),geoJson&&(geoJsonVisible?this.geoJsonDataLayer=this.map.data:this.geoJsonDataLayer=new google.maps.Data,/^http/.test(geoJson)?this.geoJsonDataLayer.loadGeoJson(geoJson):this.geoJsonDataLayer.addGeoJson(JSON.parse(geoJson))),geolocateOnLoad&&this.getLocation(),geolocate&&"geolocation"in navigator){let locationButton=document.createElement("button");locationButton.textContent=geolocateLabel,locationButton.classList.add("custom-map-control-button"),this.map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton),locationButton.addEventListener("click",e=>{e.preventDefault(),this.getLocation()})}if(drawingControl&&(this.map.data.setStyle({clickable:!1,cursor:null,draggable:!1,editable:!1,fillOpacity:0,visible:!1}),this.drawingManager=new google.maps.drawing.DrawingManager({drawingMode:null,drawingControl:!0,drawingControlOptions:{position:drawingControlPosition,drawingModes:[...drawingModes.marker?[google.maps.drawing.OverlayType.MARKER]:[],...drawingModes.circle?[google.maps.drawing.OverlayType.CIRCLE]:[],...drawingModes.polygon?[google.maps.drawing.OverlayType.POLYGON]:[],...drawingModes.polyline?[google.maps.drawing.OverlayType.POLYLINE]:[],...drawingModes.rectangle?[google.maps.drawing.OverlayType.RECTANGLE]:[]]},markerOptions:{draggable:!0},polylineOptions:{draggable:!0,editable:!1},rectangleOptions:this.rectangleOptions,circleOptions:this.circleOptions,polygonOptions:this.polyOptions}),this.drawingManager.setMap(this.map),google.maps.event.addListener(this.drawingManager,"drawingmode_changed",()=>{this.clearSelection()}),drawingField)){this.dataLayer=new google.maps.Data;let geoJSON=getStateUsing(drawingField);geoJSON&&this.loadFeaturesCollection(JSON.parse(geoJSON)),google.maps.event.addListener(this.drawingManager,"overlaycomplete",event=>{event.overlay.type=event.type,event.overlay.id=this.guid(),event.overlay.feature=this.instanceFeature(event.overlay),this.addOverlayEvents(event.overlay),this.overlays.push(event.overlay),event.type!=google.maps.drawing.OverlayType.MARKER&&(this.drawingManager.setDrawingMode(null),this.setSelection(event.overlay)),this.drawingModified()})}this.$watch("state",()=>{if(this.state===void 0)return;let location=this.getCoordinates(),markerLocation=this.marker.getPosition();location.lat===markerLocation.lat()&&location.lng===markerLocation.lng()||(this.updateAutocompleteFromLocation(location),this.updateMap(location))})},createMarkers:function(){this.routes.forEach(route=>{route.polyline&&route.polyline.setMap(null),route.label&&route.label.close()}),this.routes=[],this.markers=markers.map(location=>{let marker=this.createMarker(location);return marker.setMap(this.map),markerAction&&google.maps.event.addListener(marker,"click",event=>{this.$wire.call(markerAction,{selected_marker_data:marker.model_data})}),marker}),this.drawRoutes()},createMarker:function(location){let markerIcon;location.icon&&typeof location.icon=="object"&&location.icon.hasOwnProperty("url")&&(markerIcon={url:location.icon.url},location.icon.hasOwnProperty("type")&&location.icon.type==="svg"&&location.icon.hasOwnProperty("scale")&&(markerIcon.scaledSize=new google.maps.Size(location.icon.scale[0],location.icon.scale[1])));let point=location.location,label=location.label,marker=new google.maps.Marker({position:point,title:label,model_data:location.data,...markerIcon&&{icon:markerIcon}});return this.modelIds.indexOf(location.data)===-1&&this.modelIds.push(location.data),marker},removeMarker:function(marker){marker.setMap(null)},removeMarkers:function(){this.routes.forEach(route=>{route.polyline&&route.polyline.setMap(null),route.label&&route.label.close()}),this.routes=[];for(let i=0;i<this.markers.length;i++)this.markers[i].setMap(null);this.markers=[]},markerMoved:function(event){this.geoJsonContains(event.latLng),this.markerLocation=event.latLng.toJSON(),this.setCoordinates(this.markerLocation),this.updateFromLocation(this.markerLocation),this.map.panTo(this.markerLocation),hasPlaceUpdatedUsing&&event.placeId&&this.placesService.getDetails({placeId:event.placeId,fields:this.placeFields},(results,status)=>{status==="OK"&&placeUpdatedUsing(results)})},createClustering:function(){this.markers.length>0&&enableClustering&&(this.clusterer=new MarkerClusterer({map:this.map,markers:this.markers}))},updateClustering:function(){enableClustering&&(this.clusterer.clearMarkers(),this.clusterer.addMarkers(this.markers))},addDrawRoutesButton:function(){let button=document.createElement("button");button.textContent="Draw Routes",button.style.backgroundColor="#4CAF50",button.style.border="none",button.style.color="white",button.style.padding="10px 20px",button.style.textAlign="center",button.style.textDecoration="none",button.style.display="inline-block",button.style.fontSize="16px",button.style.margin="4px 2px",button.style.cursor="pointer",button.style.borderRadius="4px",button.addEventListener("click",()=>{this.state&&this.state.lat&&this.state.lng?(this.drawRoutesEnabled=drawRoutes,this.clearRoutes(),this.drawRoutes()):alert("Default location is not set. Please set a default location first.")}),this.map.controls[google.maps.ControlPosition.TOP_RIGHT].push(button)},drawRoutes:function(){if(!this.drawRoutesEnabled)return;this.routes.forEach(route=>{route.polyline&&route.polyline.setMap(null),route.label&&route.label.setMap(null)}),this.routes=[];let origin=this.getCoordinates();this.markers.forEach((marker,index)=>{let destination=marker.getPosition();this.directionsService.route({origin,destination,travelMode:google.maps.TravelMode.DRIVING},(response,status)=>{if(status===google.maps.DirectionsStatus.OK){let path=response.routes[0].overview_path,polyline=new google.maps.Polyline({path,strokeColor:this.getRouteColor(index),strokeOpacity:.8,strokeWeight:3,map:this.map}),midpoint=path[Math.floor(path.length/2)],distance=response.routes[0].legs[0].distance.text,duration=response.routes[0].legs[0].duration.text,label=new google.maps.InfoWindow({position:midpoint,content:`<div style="background-color: white; padding: 5px; border-radius: 3px;">
                <strong>Distance:</strong> ${distance}<br>
                <strong>Duration:</strong> ${duration}
              </div>`,pixelOffset:new google.maps.Size(0,-10)});this.routes.push({polyline,label}),polyline.addListener("click",()=>{label.getMap()?label.close():label.open(this.map)}),label.open(this.map)}else console.error("Directions request failed due to "+status)})})},clearRoutes:function(){this.routes.forEach(route=>{route.polyline&&route.polyline.setMap(null),route.label&&route.label.setMap(null)}),this.routes=[]},getRouteColor:function(index){let colors=["#FF0000","#00FF00","#0000FF","#FFA500","#800080","#008080","#FFD700","#FF69B4","#4B0082","#006400"];return colors[index%colors.length]},updateMap:function(position){this.marker.setPosition(position),this.map.panTo(position)},updateFromLocation:function(location){(this.hasReverseGeocode()||this.hasReverseAutocomplete())&&this.geocoder.geocode({location}).then(response=>{this.updateGeocodeFromAddressComponents(response.results[0].address_components),this.updateAutocompleteFromFormattedAddress(response.results[0].formatted_address),hasReverseGeocodeUsing&&reverseGeocodeUsing(response)}).catch(error=>{console.log(error.message)})},updateGeocodeFromAddressComponents:function(address_components){if(this.hasReverseGeocode()){let replacements=this.getReplacements(address_components);for(let field in reverseGeocodeFields){let replaced=reverseGeocodeFields[field];for(let replacement in replacements)replaced=replaced.split(replacement).join(replacements[replacement]);for(let symbol in this.symbols)replaced=replaced.split(symbol).join("");replaced=replaced.trim(),setStateUsing(field,replaced)}}},updateGeocodeFromLocation:function(location){this.hasReverseGeocode()&&this.geocoder.geocode({location}).then(response=>response.results[0].address_components).then(address_components=>this.updateGeocodeFromAddressComponents(address_components)).catch(error=>{console.log(error.message)})},updateAutocompleteFromFormattedAddress:function(address){this.hasReverseAutocomplete()&&setStateUsing(autocomplete,address)},updateAutocompleteFromLocation:function(location){this.hasReverseAutocomplete()&&this.geocoder.geocode({location}).then(response=>{response.results[0]&&setStateUsing(autocomplete,response.results[0].formatted_address)}).catch(error=>{console.log(error.message)})},hasReverseAutocomplete:function(){return autocomplete&&autocompleteReverse},hasReverseGeocode:function(){return Object.keys(reverseGeocodeFields).length>0||hasReverseGeocodeUsing},setCoordinates:function(position){this.state=position},getCoordinates:function(){return(this.state===null||!this.state.hasOwnProperty("lat"))&&(this.state={lat:defaultLocation.lat,lng:defaultLocation.lng}),this.state},getLocation:function(){navigator.geolocation.getCurrentPosition(position=>{this.markerLocation={lat:position.coords.latitude,lng:position.coords.longitude},this.setCoordinates(this.markerLocation),this.updateFromLocation(this.markerLocation),this.map.panTo(this.markerLocation)})},getReplacements:function(address_components){let replacements={};return address_components.forEach(component=>{for(let symbol in this.symbols)this.symbols[symbol].indexOf(component.types[0])!==-1&&(symbol===symbol.toLowerCase()?replacements[symbol]=component.short_name:replacements[symbol]=component.long_name)}),debug&&console.log(replacements),replacements},instanceOverlay:function(feature){var instance=null;switch(feature.properties.type){case google.maps.drawing.OverlayType.MARKER:instance=new google.maps.Marker({id:feature.properties.id,type:feature.properties.type,position:new google.maps.LatLng(feature.geometry.coordinates[1],feature.geometry.coordinates[0]),draggable:!0});break;case google.maps.drawing.OverlayType.RECTANGLE:var NE=new google.maps.LatLng(feature.geometry.coordinates[0][2][1],feature.geometry.coordinates[0][2][0]),SW=new google.maps.LatLng(feature.geometry.coordinates[0][0][1],feature.geometry.coordinates[0][0][0]);instance=new google.maps.Rectangle(Object.assign({},this.polyOptions,{id:feature.properties.id,type:feature.properties.type,bounds:new google.maps.LatLngBounds(SW,NE),editable:!1}));break;case google.maps.drawing.OverlayType.POLYGON:instance=new google.maps.Polygon(Object.assign({},this.polyOptions,{id:feature.properties.id,type:feature.properties.type,paths:this.transformToMVCArray(feature.geometry.coordinates),editable:!1}));break;case google.maps.drawing.OverlayType.POLYLINE:instance=new google.maps.Polyline({id:feature.properties.id,type:feature.properties.type,path:this.transformToMVCArray([feature.geometry.coordinates]).getAt(0),draggable:!0,editable:!1});break;case google.maps.drawing.OverlayType.CIRCLE:instance=new google.maps.Circle(Object.assign({},this.polyOptions,{id:feature.properties.id,type:feature.properties.type,center:new google.maps.LatLng(feature.geometry.coordinates[1],feature.geometry.coordinates[0]),radius:feature.properties.radius,editable:!1}));break}return instance},instanceFeature:function(overlay){var calculatedOverlay=this.calculateGeometry(overlay);return this.dataLayer.add(new google.maps.Data.Feature({geometry:calculatedOverlay.geometry,properties:Object.assign({id:this.guid(),type:overlay.type},calculatedOverlay.hasOwnProperty("properties")?calculatedOverlay.properties:{})}))},calculateGeometry:function(overlay,geometryOnly){switch(overlay.type){case google.maps.drawing.OverlayType.MARKER:return geometryOnly?new google.maps.Data.Point(overlay.getPosition()):{geometry:new google.maps.Data.Point(overlay.getPosition())};case google.maps.drawing.OverlayType.RECTANGLE:let b=overlay.getBounds(),p=[b.getSouthWest(),{lat:b.getSouthWest().lat(),lng:b.getNorthEast().lng()},b.getNorthEast(),{lng:b.getSouthWest().lng(),lat:b.getNorthEast().lat()}];return geometryOnly?new google.maps.Data.Polygon([p]):{geometry:new google.maps.Data.Polygon([p])};case google.maps.drawing.OverlayType.POLYGON:return geometryOnly?new google.maps.Data.Polygon([overlay.getPath().getArray()]):{geometry:new google.maps.Data.Polygon([overlay.getPath().getArray()])};case google.maps.drawing.OverlayType.POLYLINE:return geometryOnly?new google.maps.Data.LineString(overlay.getPath().getArray()):{geometry:new google.maps.Data.LineString(overlay.getPath().getArray())};case google.maps.drawing.OverlayType.CIRCLE:return geometryOnly?new google.maps.Data.Point(overlay.getCenter()):{properties:{radius:overlay.getRadius()},geometry:new google.maps.Data.Point(overlay.getCenter())}}},transformToMVCArray:function(a){let clone=new google.maps.MVCArray;function transform($a,parent){$a.length==2&&!Array.isArray($a[0])&&!Array.isArray($a[1])&&parent.push(new google.maps.LatLng($a[1],$a[0]));for(let a2=0;a2<$a.length;a2++)!Array.isArray($a[a2])||transform($a[a2],parent?$a[a2].length==2&&!Array.isArray($a[a2][0])&&!Array.isArray($a[a2][1])?parent:parent.getAt(parent.push(new google.maps.MVCArray)-1):clone.getAt(clone.push(new google.maps.MVCArray)-1))}function isMVCArray(array){return array instanceof google.maps.MVCArray}return transform(a),clone},loadFeaturesCollection:function(geoJSON){if(Array.isArray(geoJSON.features)&&geoJSON.features.length>0){let bounds=new google.maps.LatLngBounds;for(let f=0;f<geoJSON.features.length;f++){let overlay=this.instanceOverlay(geoJSON.features[f]);overlay.feature=this.instanceFeature(overlay),this.addOverlayEvents(overlay),overlay.feature.getGeometry().forEachLatLng(function(latlng){bounds.extend(latlng)}),overlay.setMap(this.map),this.overlays.push(overlay)}this.map.fitBounds(bounds)}},addOverlayEvents:function(overlay){switch(overlay.type){case google.maps.drawing.OverlayType.POLYLINE:google.maps.event.addListener(overlay.getPath(),"set_at",()=>{overlay.drag||(overlay.feature.setGeometry(this.calculateGeometry(overlay,!0)),this.drawingModified())}),google.maps.event.addListener(overlay.getPath(),"insert_at",()=>{overlay.feature.setGeometry(this.calculateGeometry(overlay,!0)),this.drawingModified()}),google.maps.event.addListener(overlay.getPath(),"remove_at",()=>{overlay.feature.setGeometry(this.calculateGeometry(overlay,!0)),this.drawingModified()});break;case google.maps.drawing.OverlayType.POLYGON:let paths=overlay.getPaths();for(let p=0;p<paths.getLength();p++)for(let sp=0;sp<paths.getAt(p).getLength();sp++)google.maps.event.addListener(paths.getAt(p),"set_at",()=>{overlay.drag||(overlay.feature.setGeometry(this.calculateGeometry(overlay,!0)),this.drawingModified())}),google.maps.event.addListener(paths.getAt(p),"insert_at",()=>{overlay.feature.setGeometry(this.calculateGeometry(overlay,!0)),this.drawingModified()}),google.maps.event.addListener(paths.getAt(p),"remove_at",()=>{overlay.feature.setGeometry(this.calculateGeometry(overlay,!0)),this.drawingModified()});break;case google.maps.drawing.OverlayType.RECTANGLE:google.maps.event.addListener(overlay,"bounds_changed",()=>{overlay.drag||(overlay.feature.setGeometry(this.calculateGeometry(overlay,!0)),this.drawingModified())});break;case google.maps.drawing.OverlayType.CIRCLE:google.maps.event.addListener(overlay,"radius_changed",()=>{overlay.feature.setProperty("radius",this.calculateGeometry(overlay).properties.radius),this.drawingModified()});break}if(overlay.type!==google.maps.drawing.OverlayType.MARKER){let self=this;google.maps.event.addListener(overlay,"click",function(event){self.setSelection(this)})}google.maps.event.addListener(overlay,"dragstart",()=>{overlay.drag=!0}),google.maps.event.addListener(overlay,"mouseup",()=>{overlay.drag&&(overlay.drag=!1,overlay.feature.setGeometry(this.calculateGeometry(overlay,!0)),this.drawingModified())})},drawingModified:function(){drawingField&&this.dataLayer.toGeoJson(obj=>{setStateUsing(drawingField,JSON.stringify(obj))})},guid:function(){function s4(){return Math.floor((1+Math.random())*65536).toString(16).substring(1)}return s4()+s4()+"-"+s4()+"-"+s4()+"-"+s4()+"-"+s4()+s4()+s4()},setSelection:function(shape){this.clearSelection(),this.selectedShape=shape,this.overlays.forEach(function(item){shape&&item.id==shape.id?(item.getEditable()?shape.setOptions({strokeColor:"#00ff00",strokeOpacity:"0.5"}):shape.setOptions({strokeColor:"#ff0000",strokeOpacity:"0.8"}),item.setEditable(!item.getEditable())):item.setEditable(!1)})},clearSelection:function(){this.selectedShape=null,this.overlays.forEach(function(item){item.setEditable(!1),item.setOptions({strokeColor:"#00ff00",strokeOpacity:"0.5"})})},geoJsonContains:function(latLng){if(geoJson&&geoJsonField){let features=[],dataLayer=new google.maps.Data;this.geoJsonDataLayer.forEach(feature=>{if(feature.getGeometry().getType()==="Polygon"){var poly=new google.maps.Polygon({path:feature.getGeometry().getAt(0).getArray()});google.maps.geometry.poly.containsLocation(latLng,poly)&&(geoJsonProperty?features.push(feature.getProperty(geoJsonProperty)):dataLayer.add(feature))}feature.getGeometry().getType()==="MultiPolygon"&&feature.getGeometry().getArray().forEach(function(item,i){let coords=item.getAt(0).getArray(),poly2=new google.maps.Polygon({paths:coords});google.maps.geometry.poly.containsLocation(latLng,poly2)&&(geoJsonProperty?features.push(feature.getProperty(geoJsonProperty)):dataLayer.add(feature))})});let fieldContent;geoJsonProperty?(fieldContent=JSON.stringify(features),setStateUsing(geoJsonField,fieldContent)):dataLayer.toGeoJson(gj=>{fieldContent=JSON.stringify(gj),setStateUsing(geoJsonField,fieldContent)})}}}}export{filamentGoogleMapsField as default};
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
